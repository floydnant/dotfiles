# ---------------------------------------------------------------------------------------------------------------------
# Oh my zsh
# ---------------------------------------------------------------------------------------------------------------------
# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="macovsky"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Disable auto-update in favour of chezmoi handling the updates to
# avoid drift between chezmoi's target state and the actual state
zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
	git
	macos
	npm
	zsh-autosuggestions
	zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# User configuration

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Aliases
#
# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

alias pd="~/coding/projects"
alias bb="~/coding/bb"
alias tmp="~/coding/tmp"

alias o="sh ~/.config/helpers/open.sh"
alias c="sh ~/.config/helpers/code.sh"
alias oter="sh ~/.config/helpers/open-iterm.sh"
alias oob="open . -a obsidian.app"
alias zshrc="chezmoi edit ~/.zshrc --apply && source ~/.zshrc"
alias todo="sh ~/.config/helpers/todo.sh"
alias t="todo"

alias cl="clear"
alias lg="lazygit"
alias glo="git log --decorate --graph --oneline"
alias cuuid='node -e "console.log(\`$(uuidgen)\`.toLowerCase())" | pbcopy'
alias uuid='uuidgen | tr "[:upper:]" "[:lower:]" | tr -d "\n" | pbcopy'

alias fbat="sh ~/.config/helpers/find-and-print.sh"
alias tre="tree -I node_modules -I dist"
alias fzn="fzf --preview 'bat --style=numbers --color=always {}' | xargs -n 1 nvim"
alias fzc="fzf --preview 'bat --style=numbers --color=always {}' | xargs -n 1 code"

# ---------------------------------------------------------------------------------------------------------------------
# Chezmoi
# ---------------------------------------------------------------------------------------------------------------------
alias cem="chezmoi"
alias cembrewdump="brew bundle dump --describe --global --force && chezmoi re-add ~/.Brewfile"
alias cemstatus="chezmoi status -p absolute | sed \"s=/Users/\$(whoami)=~=g\""

# ---------------------------------------------------------------------------------------------------------------------
# Homebrew
# ---------------------------------------------------------------------------------------------------------------------
# Disables MacOS' Gatekeeper (i.e. skips the "Are you sure you want to open this app?" dialog)
export HOMEBREW_CASK_OPTS=--no-quarantine

# ---------------------------------------------------------------------------------------------------------------------
# Go
# ---------------------------------------------------------------------------------------------------------------------
if [ -d "$HOME/go" ];
	then
	export GOPATH="$HOME/go"
	export PATH="$PATH:$GOPATH/bin"
fi

# ---------------------------------------------------------------------------------------------------------------------
# Man
# ---------------------------------------------------------------------------------------------------------------------
# Syntax highlighting for man pages w/ bat
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
# export MANPATH="/usr/local/man:$MANPATH"

# ---------------------------------------------------------------------------------------------------------------------
# Lazygit
# ---------------------------------------------------------------------------------------------------------------------
export XDG_CONFIG_HOME="$HOME/.config"

# ---------------------------------------------------------------------------------------------------------------------
# gcloud
# ---------------------------------------------------------------------------------------------------------------------
# The next line updates PATH for the Google Cloud SDK.
if [ -f "$HOME/google-cloud-sdk/path.zsh.inc" ]; then . "$HOME/google-cloud-sdk/path.zsh.inc"; fi
# The next line enables shell command completion for gcloud.
if [ -f "$HOME/google-cloud-sdk/completion.zsh.inc" ]; then . "$HOME/google-cloud-sdk/completion.zsh.inc"; fi

# ---------------------------------------------------------------------------------------------------------------------
# postgres
# ---------------------------------------------------------------------------------------------------------------------
if [ -d "/opt/homebrew/opt/postgresql@16" ];
	then
	# alias postgres="/opt/homebrew/opt/postgresql@16/bin/postgres -D /opt/homebrew/var/postgresql@16"
	# alias psql="/opt/homebrew/opt/postgresql@16/bin/psql"
	export PATH="/opt/homebrew/opt/postgresql@16/bin:$PATH"
fi

# ---------------------------------------------------------------------------------------------------------------------
# Bun
# ---------------------------------------------------------------------------------------------------------------------
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# ---------------------------------------------------------------------------------------------------------------------
# Rust
# ---------------------------------------------------------------------------------------------------------------------
[ -s "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"
# export CARGO_HOME="$HOME/.cargo"
# export PATH="$CARGO_HOME/bin:$PATH"

# ---------------------------------------------------------------------------------------------------------------------
# Trash
# ---------------------------------------------------------------------------------------------------------------------
if [ -d "/opt/homebrew/opt/trash/bin" ];
	then
	export PATH="/opt/homebrew/opt/trash/bin:$PATH"
fi

# ---------------------------------------------------------------------------------------------------------------------
# Load Angular CLI autocompletion.
# ---------------------------------------------------------------------------------------------------------------------
if type ng > /dev/null; then source <(ng completion script); fi;

# ---------------------------------------------------------------------------------------------------------------------
# Init docker
# ---------------------------------------------------------------------------------------------------------------------
[ -f "$HOME/.docker/init-zsh.sh" ] && source $HOME/.docker/init-zsh.sh || true;

# ---------------------------------------------------------------------------------------------------------------------
# Completion
# ---------------------------------------------------------------------------------------------------------------------
autoload -U +X bashcompinit && bashcompinit

## [Completion]
## Dart Completion scripts setup
[[ -f "$HOME/.dart-cli-completion/zsh-config.zsh" ]] && . $HOME/.dart-cli-completion/zsh-config.zsh || true
## [/Completion]
